services:
  zookeeper-finance:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper-finance
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183  # Changed to avoid conflict
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2183:2183"  # Exposing a different port
    networks:
      - finance-network
    volumes:
      - zookeeper-data-finance:/var/lib/zookeeper  # Adding volume for Zookeeper data
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc 127.0.0.1 2183 | grep imok"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-finance:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-finance
    depends_on:
      - zookeeper-finance
    environment:
      KAFKA_BROKER_ID: 3  # Different ID
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-finance:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-finance:29094,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29094,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9094:9094"  # Different port to avoid conflict
    networks:
      - finance-network
    volumes:
      - kafka-data-finance:/var/lib/kafka/data  # Adding volume for Kafka data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9094"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-financesystemdb:
    image: postgres:15-alpine
    container_name: postgres-financesystemdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: centralizedfinancedb
    volumes:
      - postgres-financesystem-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - finance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  financesystem-service:
    build:
      context: .
      dockerfile: src/main/Dockerfile
    container_name: financesystem-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-financesystemdb:5432/centralizedfinancedb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-finance:29094  # Using correct Kafka broker
    networks:
      - finance-network
    depends_on:
      - kafka-finance
      - postgres-financesystemdb

networks:
  finance-network:
    driver: bridge

volumes:
  postgres-financesystem-data:
  kafka-data-finance:
  zookeeper-data-finance:
